///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

const std = @import("std");

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

const video = @import("video.zig");
const audio = @import("audio.zig");
const event = @import("event.zig");
const api = @import("api.zig");
const time = @import("time.zig");
const math = @import("math.zig");
const color = @import("color.zig");

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

pub const lookup_symbols = api.lookup_symbols;
pub const lookup_using = api.lookup_using;

pub const create_window = video.create_window;
pub const create_shader = video.create_shader;
pub const create_buffer = video.create_buffer;

pub const Vec2 = math.Vec2;
pub const Vec3 = math.Vec3;
pub const Vec4 = math.Vec4;
pub const Mat4 = math.Mat4;

pub const Color = color.Color;

pub const Event = event.Event;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

pub var prng: std.Random.DefaultPrng = undefined;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

pub fn init(options: InitOptions) !void {
    if (options.video) {
        try video.init();
    }
    if (options.audio) {
        try audio.init();
    }

    time.init();
    const now = time.wallclock_us();

    prng = std.Random.DefaultPrng.init(now);
}

pub const InitOptions = struct {
    video: bool = false,
    audio: bool = false,
};

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

pub fn deinit() void {
    video.deinit();
    audio.deinit();
    time.deinit();
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

pub fn poll_event() ?Event {
    return video.poll_event();
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

pub fn rand() f32 {
    const random = prng.random();
    return random.float(f32);
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
